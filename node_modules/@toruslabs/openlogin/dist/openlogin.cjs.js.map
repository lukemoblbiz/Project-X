{"version":3,"file":"openlogin.cjs.js","mappings":"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","sources":["webpack://@toruslabs/openlogin/webpack/bootstrap","webpack://@toruslabs/openlogin/webpack/runtime/compat get default export","webpack://@toruslabs/openlogin/webpack/runtime/define property getters","webpack://@toruslabs/openlogin/webpack/runtime/hasOwnProperty shorthand","webpack://@toruslabs/openlogin/webpack/runtime/make namespace object","webpack://@toruslabs/openlogin/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@toruslabs/openlogin/external commonjs2 \"ts-custom-error\"","webpack://@toruslabs/openlogin/./src/errors.ts","webpack://@toruslabs/openlogin/external commonjs2 \"loglevel\"","webpack://@toruslabs/openlogin/./src/logger.ts","webpack://@toruslabs/openlogin/external commonjs2 \"@babel/runtime/helpers/objectSpread2\"","webpack://@toruslabs/openlogin/external commonjs2 \"@toruslabs/openlogin-session-manager\"","webpack://@toruslabs/openlogin/external commonjs2 \"@toruslabs/openlogin-utils\"","webpack://@toruslabs/openlogin/external commonjs2 \"@toruslabs/secure-pub-sub\"","webpack://@toruslabs/openlogin/external commonjs2 \"events\"","webpack://@toruslabs/openlogin/external commonjs2 \"@toruslabs/eccrypto\"","webpack://@toruslabs/openlogin/external commonjs2 \"@toruslabs/metadata-helpers\"","webpack://@toruslabs/openlogin/external commonjs2 \"bowser\"","webpack://@toruslabs/openlogin/./src/utils.ts","webpack://@toruslabs/openlogin/./src/PopupHandler.ts","webpack://@toruslabs/openlogin/./src/OpenLogin.ts","webpack://@toruslabs/openlogin/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"ts-custom-error\");","import { CustomError } from \"ts-custom-error\";\n\nexport interface IOpenloginError extends CustomError {\n  code: number;\n  message: string;\n  toString(): string;\n}\n\nexport type ErrorCodes = {\n  [key: number]: string;\n};\n\nexport abstract class OpenloginError extends CustomError implements IOpenloginError {\n  code: number;\n\n  message: string;\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(message);\n\n    this.code = code;\n    this.message = message || \"\";\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"OpenloginError\" });\n  }\n\n  toJSON(): IOpenloginError {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message,\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJSON());\n  }\n}\n\nexport class InitializationError extends OpenloginError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5001: \"Invalid constructor params\",\n    5002: \"SDK not initialized. please call init first\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"InitializationError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): OpenloginError {\n    return new InitializationError(code, `${InitializationError.messages[code]}, ${extraMessage}`);\n  }\n\n  public static invalidParams(extraMessage = \"\"): OpenloginError {\n    return InitializationError.fromCode(5001, extraMessage);\n  }\n\n  public static notInitialized(extraMessage = \"\"): OpenloginError {\n    return InitializationError.fromCode(5002, extraMessage);\n  }\n}\n\n/**\n * login errors\n */\n\nexport class LoginError extends OpenloginError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5111: \"Invalid login params\",\n    5112: \"User not logged in.\",\n    5113: \"login popup has been closed by the user\",\n    5114: \"Login failed\",\n    5115: \"Popup was blocked. Please call this function as soon as user clicks button or use redirect mode\",\n    5116: \"MFA already enabled\",\n    5117: \"MFA not yet enabled. Please call `enableMFA` first\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"LoginError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): OpenloginError {\n    return new LoginError(code, `${LoginError.messages[code]}, ${extraMessage}`);\n  }\n\n  public static invalidLoginParams(extraMessage = \"\"): OpenloginError {\n    return LoginError.fromCode(5111, extraMessage);\n  }\n\n  public static userNotLoggedIn(extraMessage = \"\"): OpenloginError {\n    return LoginError.fromCode(5112, extraMessage);\n  }\n\n  public static popupClosed(extraMessage = \"\"): OpenloginError {\n    return LoginError.fromCode(5113, extraMessage);\n  }\n\n  public static loginFailed(extraMessage = \"\"): OpenloginError {\n    return LoginError.fromCode(5114, extraMessage);\n  }\n\n  public static popupBlocked(extraMessage = \"\"): OpenloginError {\n    return LoginError.fromCode(5115, extraMessage);\n  }\n\n  public static mfaAlreadyEnabled(extraMessage = \"\"): OpenloginError {\n    return LoginError.fromCode(5116, extraMessage);\n  }\n\n  public static mfaNotEnabled(extraMessage = \"\"): OpenloginError {\n    return LoginError.fromCode(5117, extraMessage);\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"loglevel\");","import { getLogger } from \"loglevel\";\n\nexport const loglevel = getLogger(\"openlogin\");\n\nloglevel.setLevel(\"error\");\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/objectSpread2\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/openlogin-session-manager\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/openlogin-utils\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/secure-pub-sub\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"events\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/eccrypto\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/metadata-helpers\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"bowser\");","import { getPublic, sign } from \"@toruslabs/eccrypto\";\nimport { keccak256 } from \"@toruslabs/metadata-helpers\";\nimport { base64url, LOGIN_PROVIDER, safeatob, safebtoa } from \"@toruslabs/openlogin-utils\";\nimport bowser from \"bowser\";\n\nimport { loglevel as log } from \"./logger\";\n\n// don't use destructuring for process.env cause it messes up webpack env plugin\nexport const version = process.env.OPENLOGIN_VERSION;\n\nexport async function whitelistUrl(clientId: string, appKey: string, origin: string): Promise<string> {\n  const appKeyBuf = Buffer.from(appKey.padStart(64, \"0\"), \"hex\");\n  if (base64url.encode(getPublic(appKeyBuf)) !== clientId) throw new Error(\"appKey mismatch\");\n  const sig = await sign(appKeyBuf, keccak256(Buffer.from(origin, \"utf8\")));\n  return base64url.encode(sig);\n}\n\nexport type HashQueryParamResult = {\n  sessionId?: string;\n  sessionNamespace?: string;\n  error?: string;\n  state?: string;\n};\n\nexport function getHashQueryParams(replaceUrl = false): HashQueryParamResult {\n  const result: HashQueryParamResult = {};\n\n  const url = new URL(window.location.href);\n  url.searchParams.forEach((value: string, key: string) => {\n    if (key !== \"result\") {\n      result[key as keyof HashQueryParamResult] = value;\n    }\n  });\n  const queryResult = url.searchParams.get(\"result\");\n  if (queryResult) {\n    try {\n      const queryParams = JSON.parse(safeatob(queryResult));\n      Object.keys(queryParams).forEach((key: string) => {\n        result[key as keyof HashQueryParamResult] = queryParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  const hash = url.hash.substring(1);\n  const hashUrl = new URL(`${window.location.origin}/?${hash}`);\n  hashUrl.searchParams.forEach((value: string, key: string) => {\n    if (key !== \"result\") {\n      result[key as keyof HashQueryParamResult] = value;\n    }\n  });\n  const hashResult = hashUrl.searchParams.get(\"result\");\n\n  if (hashResult) {\n    try {\n      const hashParams = JSON.parse(safeatob(hashResult));\n      Object.keys(hashParams).forEach((key: string) => {\n        result[key as keyof HashQueryParamResult] = hashParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  if (replaceUrl) {\n    const cleanUrl = new URL(window.location.origin + window.location.pathname);\n    cleanUrl.search = window.location.search;\n    if (hashResult) {\n      const hashParams = JSON.parse(safeatob(hashResult));\n      delete hashParams.sessionId;\n      delete hashParams.sessionNamespace;\n      delete hashParams.error;\n      cleanUrl.hash = safebtoa(JSON.stringify(hashParams));\n    }\n    window.history.replaceState({ ...window.history.state, as: cleanUrl.href, url: cleanUrl.href }, \"\", cleanUrl.href);\n  }\n\n  return result;\n}\n\nexport function constructURL(params: { baseURL: string; query?: Record<string, unknown>; hash?: Record<string, unknown> }): string {\n  const { baseURL, query, hash } = params;\n\n  const url = new URL(baseURL);\n  if (query) {\n    Object.keys(query).forEach((key) => {\n      url.searchParams.append(key, query[key] as string);\n    });\n  }\n  if (hash) {\n    const h = new URL(constructURL({ baseURL, query: hash })).searchParams.toString();\n    url.hash = h;\n  }\n  return url.toString();\n}\n\nexport function getPopupFeatures(): string {\n  if (typeof window === \"undefined\") return \"\";\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const w = 1200;\n  const h = 700;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n      ? document.documentElement.clientWidth\n      : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n      ? document.documentElement.clientHeight\n      : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n\nexport function isMobileOrTablet(): boolean {\n  if (typeof window === \"undefined\") return false;\n  const browser = bowser.getParser(window.navigator.userAgent);\n  const platform = browser.getPlatform();\n  return platform.type === bowser.PLATFORMS_MAP.tablet || platform.type === bowser.PLATFORMS_MAP.mobile;\n}\n\nexport function getTimeout(loginProvider: string) {\n  if ((loginProvider === LOGIN_PROVIDER.FACEBOOK || loginProvider === LOGIN_PROVIDER.LINE) && isMobileOrTablet()) {\n    return 1000 * 60 * 5; // 5 minutes to finish the login\n  }\n  return 1000 * 10; // 10 seconds\n}\n","import { SecurePubSub } from \"@toruslabs/secure-pub-sub\";\nimport { EventEmitter } from \"events\";\n\nimport { LoginError } from \"./errors\";\nimport { getPopupFeatures } from \"./utils\";\n\nexport interface PopupResponse {\n  sessionId?: string;\n  sessionNamespace?: string;\n  state?: string;\n  error?: string;\n}\nclass PopupHandler extends EventEmitter {\n  url: string;\n\n  target: string;\n\n  features: string;\n\n  window: Window;\n\n  windowTimer: number;\n\n  iClosedWindow: boolean;\n\n  timeout: number;\n\n  constructor({ url, target, features, timeout = 30000 }: { url: string; target?: string; features?: string; timeout?: number }) {\n    super();\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this.timeout = timeout;\n    this._setupTimer();\n  }\n\n  _setupTimer(): void {\n    this.windowTimer = Number(\n      setInterval(() => {\n        if (this.window && this.window.closed) {\n          clearInterval(this.windowTimer);\n          setTimeout(() => {\n            if (!this.iClosedWindow) {\n              this.emit(\"close\");\n            }\n            this.iClosedWindow = false;\n            this.window = undefined;\n          }, this.timeout);\n        }\n        if (this.window === undefined) clearInterval(this.windowTimer);\n      }, 500)\n    );\n  }\n\n  open(): void {\n    this.window = window.open(this.url, this.target, this.features);\n    if (!this.window) throw LoginError.popupBlocked();\n    if (this.window?.focus) this.window.focus();\n  }\n\n  close(): void {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect: boolean): void {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url);\n    } else {\n      window.location.href = this.url;\n    }\n  }\n\n  async listenOnChannel(loginId: string): Promise<PopupResponse> {\n    const securePubSub = new SecurePubSub();\n    const data = await securePubSub.subscribe(loginId);\n    this.close();\n    securePubSub.cleanup();\n    const parsedData = JSON.parse(data) as { error?: string; state?: string; data?: { sessionId?: string; sessionNamespace?: string } };\n    if (parsedData.error) {\n      return { error: parsedData.error, state: parsedData.state };\n    }\n    return parsedData.data;\n  }\n}\n\nexport default PopupHandler;\n","import { OpenloginSessionManager } from \"@toruslabs/openlogin-session-manager\";\nimport {\n  BaseLoginParams,\n  BaseRedirectParams,\n  BrowserStorage,\n  BUILD_ENV,\n  jsonToBase64,\n  LoginParams,\n  ManageMFAParams,\n  OPENLOGIN_ACTIONS,\n  OPENLOGIN_NETWORK,\n  OpenLoginOptions,\n  OpenloginSessionConfig,\n  OpenloginSessionData,\n  OpenloginUserInfo,\n  SocialMfaModParams,\n  TORUS_LEGACY_NETWORK,\n  type TORUS_LEGACY_NETWORK_TYPE,\n  UX_MODE,\n} from \"@toruslabs/openlogin-utils\";\n\nimport { InitializationError, LoginError } from \"./errors\";\nimport { loglevel as log } from \"./logger\";\nimport PopupHandler, { PopupResponse } from \"./PopupHandler\";\nimport { constructURL, getHashQueryParams, getTimeout, version } from \"./utils\";\n\nclass OpenLogin {\n  state: OpenloginSessionData = {};\n\n  options: OpenLoginOptions;\n\n  private sessionManager: OpenloginSessionManager<OpenloginSessionData>;\n\n  private currentStorage: BrowserStorage;\n\n  private _storageBaseKey = \"openlogin_store\";\n\n  private dappState: string;\n\n  private addVersionInUrls = true;\n\n  constructor(options: OpenLoginOptions) {\n    if (!options.clientId) throw InitializationError.invalidParams(\"clientId is required\");\n    if (!options.network) options.network = OPENLOGIN_NETWORK.SAPPHIRE_MAINNET;\n    if (!options.buildEnv) options.buildEnv = BUILD_ENV.PRODUCTION;\n    if (options.buildEnv === BUILD_ENV.DEVELOPMENT || options.buildEnv === BUILD_ENV.TESTING || options.sdkUrl) this.addVersionInUrls = false;\n    if (!options.sdkUrl && !options.useMpc) {\n      if (options.buildEnv === BUILD_ENV.DEVELOPMENT) {\n        options.sdkUrl = \"http://localhost:3000\";\n        options.dashboardUrl = \"http://localhost:5173/wallet/account\";\n      } else if (options.buildEnv === BUILD_ENV.STAGING) {\n        options.sdkUrl = \"https://staging-auth.web3auth.io\";\n        options.dashboardUrl = \"https://staging-account.web3auth.io/wallet/account\";\n      } else if (options.buildEnv === BUILD_ENV.TESTING) {\n        options.sdkUrl = \"https://develop-auth.web3auth.io\";\n        options.dashboardUrl = \"https://develop-account.web3auth.io/wallet/account\";\n      } else {\n        options.sdkUrl = \"https://auth.web3auth.io\";\n        options.dashboardUrl = \"https://account.web3auth.io/wallet/account\";\n      }\n    }\n\n    if (options.useMpc && !options.sdkUrl) {\n      if (Object.values(TORUS_LEGACY_NETWORK).includes(options.network as TORUS_LEGACY_NETWORK_TYPE))\n        throw new Error(\"MPC is not supported on legacy networks, please use sapphire_devnet or sapphire_mainnet.\");\n      if (options.buildEnv === BUILD_ENV.DEVELOPMENT) {\n        options.sdkUrl = \"http://localhost:3000\";\n      } else if (options.buildEnv === BUILD_ENV.STAGING) {\n        options.sdkUrl = \"https://staging-mpc-auth.web3auth.io\";\n      } else if (options.buildEnv === BUILD_ENV.TESTING) {\n        options.sdkUrl = \"https://develop-mpc-auth.web3auth.io\";\n      } else {\n        options.sdkUrl = \"https://mpc-auth.web3auth.io\";\n      }\n    }\n\n    if (!options.redirectUrl && typeof window !== \"undefined\") {\n      options.redirectUrl = `${window.location.protocol}//${window.location.host}${window.location.pathname}`;\n    }\n    if (!options.uxMode) options.uxMode = UX_MODE.REDIRECT;\n    if (typeof options.replaceUrlOnRedirect !== \"boolean\") options.replaceUrlOnRedirect = true;\n    if (!options.originData) options.originData = {};\n    if (!options.whiteLabel) options.whiteLabel = {};\n    if (!options.loginConfig) options.loginConfig = {};\n    if (!options.mfaSettings) options.mfaSettings = {};\n    if (!options.storageServerUrl) options.storageServerUrl = \"https://broadcast-server.tor.us\";\n    if (!options.storageKey) options.storageKey = \"local\";\n    if (!options.webauthnTransports) options.webauthnTransports = [\"internal\"];\n    if (!options.sessionTime) options.sessionTime = 86400;\n\n    this.options = options;\n  }\n\n  get privKey(): string {\n    if (this.options.useMpc) return this.state.factorKey || \"\";\n    return this.state.privKey ? this.state.privKey.padStart(64, \"0\") : \"\";\n  }\n\n  get coreKitKey(): string {\n    return this.state.coreKitKey ? this.state.coreKitKey.padStart(64, \"0\") : \"\";\n  }\n\n  get ed25519PrivKey(): string {\n    return this.state.ed25519PrivKey ? this.state.ed25519PrivKey.padStart(128, \"0\") : \"\";\n  }\n\n  get coreKitEd25519Key(): string {\n    return this.state.coreKitEd25519PrivKey ? this.state.coreKitEd25519PrivKey.padStart(128, \"0\") : \"\";\n  }\n\n  get sessionId(): string {\n    return this.state.sessionId || \"\";\n  }\n\n  get sessionNamespace(): string {\n    return this.options.sessionNamespace || \"\";\n  }\n\n  get appState(): string {\n    return this.state.userInfo.appState || this.dappState || \"\";\n  }\n\n  private get baseUrl(): string {\n    // testing and develop don't have versioning\n    if (!this.addVersionInUrls) return `${this.options.sdkUrl}`;\n    return `${this.options.sdkUrl}/v${version.split(\".\")[0]}`;\n  }\n\n  async init(): Promise<void> {\n    // get sessionNamespace from the redirect result.\n    const params = getHashQueryParams(this.options.replaceUrlOnRedirect);\n    if (params.sessionNamespace) this.options.sessionNamespace = params.sessionNamespace;\n\n    const storageKey = this.options.sessionNamespace ? `${this._storageBaseKey}_${this.options.sessionNamespace}` : this._storageBaseKey;\n    this.currentStorage = BrowserStorage.getInstance(storageKey, this.options.storageKey);\n\n    const sessionId = this.currentStorage.get<string>(\"sessionId\");\n\n    this.sessionManager = new OpenloginSessionManager({\n      sessionServerBaseUrl: this.options.storageServerUrl,\n      sessionNamespace: this.options.sessionNamespace,\n      sessionTime: this.options.sessionTime,\n      sessionId,\n    });\n\n    if (this.options.network === OPENLOGIN_NETWORK.TESTNET || this.options.network === OPENLOGIN_NETWORK.SAPPHIRE_DEVNET) {\n      // using console log because it shouldn't be affected by loglevel config\n      // eslint-disable-next-line no-console\n      console.log(\n        `%c WARNING! You are on ${this.options.network}. Please set network: 'mainnet' or 'sapphire_mainnet' in production`,\n        \"color: #FF0000\"\n      );\n    }\n\n    if (this.options.buildEnv !== BUILD_ENV.PRODUCTION) {\n      // using console log because it shouldn't be affected by loglevel config\n      // eslint-disable-next-line no-console\n      console.log(`%c WARNING! You are using build env ${this.options.buildEnv}. Please set buildEnv: 'production' in production`, \"color: #FF0000\");\n    }\n\n    if (params.error) {\n      this.dappState = params.state;\n      throw LoginError.loginFailed(params.error);\n    }\n\n    if (params.sessionId) {\n      this.currentStorage.set(\"sessionId\", params.sessionId);\n      this.sessionManager.sessionId = params.sessionId;\n    }\n\n    if (this.sessionManager.sessionId) {\n      const data = await this._authorizeSession();\n      // Fill state with correct info from session\n      // If session is invalid all the data is unset here.\n      this.updateState(data);\n      if (Object.keys(data).length === 0) {\n        // If session is invalid, unset the sessionId from localStorage.\n        this.currentStorage.set(\"sessionId\", \"\");\n      }\n    }\n  }\n\n  async login(params: LoginParams & Partial<BaseRedirectParams>): Promise<{ privKey: string } | null> {\n    if (!params.loginProvider) throw LoginError.invalidLoginParams(`loginProvider is required`);\n\n    // in case of redirect mode, redirect url will be dapp specified\n    // in case of popup mode, redirect url will be sdk specified\n    const defaultParams: BaseRedirectParams = {\n      redirectUrl: this.options.redirectUrl,\n    };\n\n    const loginParams: LoginParams = {\n      loginProvider: params.loginProvider,\n      ...defaultParams,\n      ...params,\n    };\n\n    const dataObject: OpenloginSessionConfig = {\n      actionType: OPENLOGIN_ACTIONS.LOGIN,\n      options: this.options,\n      params: loginParams,\n    };\n\n    const result = await this.openloginHandler(`${this.baseUrl}/start`, dataObject, getTimeout(params.loginProvider));\n    if (this.options.uxMode === UX_MODE.REDIRECT) return null;\n    if (result.error) {\n      this.dappState = result.state;\n      throw LoginError.loginFailed(result.error);\n    }\n    this.sessionManager.sessionId = result.sessionId;\n    this.options.sessionNamespace = result.sessionNamespace;\n    this.currentStorage.set(\"sessionId\", result.sessionId);\n    await this.rehydrateSession();\n    return { privKey: this.privKey };\n  }\n\n  async logout(): Promise<void> {\n    if (!this.sessionManager.sessionId) throw LoginError.userNotLoggedIn();\n    await this.sessionManager.invalidateSession();\n    this.updateState({\n      privKey: \"\",\n      coreKitKey: \"\",\n      coreKitEd25519PrivKey: \"\",\n      ed25519PrivKey: \"\",\n      walletKey: \"\",\n      oAuthPrivateKey: \"\",\n      tKey: \"\",\n      metadataNonce: \"\",\n      keyMode: undefined,\n      userInfo: {\n        name: \"\",\n        profileImage: \"\",\n        dappShare: \"\",\n        idToken: \"\",\n        oAuthIdToken: \"\",\n        oAuthAccessToken: \"\",\n        appState: \"\",\n        email: \"\",\n        verifier: \"\",\n        verifierId: \"\",\n        aggregateVerifier: \"\",\n        typeOfLogin: \"\",\n        isMfaEnabled: false,\n      },\n      authToken: \"\",\n      sessionId: \"\",\n      factorKey: \"\",\n      signatures: [],\n      tssShareIndex: -1,\n      tssPubKey: \"\",\n      tssShare: \"\",\n      tssNonce: -1,\n    });\n\n    this.currentStorage.set(\"sessionId\", \"\");\n  }\n\n  async enableMFA(params: Partial<LoginParams>): Promise<boolean> {\n    if (!this.sessionId) throw LoginError.userNotLoggedIn();\n    if (this.state.userInfo.isMfaEnabled) throw LoginError.mfaAlreadyEnabled();\n    // in case of redirect mode, redirect url will be dapp specified\n    // in case of popup mode, redirect url will be sdk specified\n    const defaultParams: BaseRedirectParams = {\n      redirectUrl: this.options.redirectUrl,\n    };\n\n    const dataObject: OpenloginSessionConfig = {\n      actionType: OPENLOGIN_ACTIONS.ENABLE_MFA,\n      options: this.options,\n      params: {\n        ...defaultParams,\n        ...params,\n        loginProvider: this.state.userInfo.typeOfLogin,\n        extraLoginOptions: {\n          login_hint: this.state.userInfo.verifierId,\n        },\n        mfaLevel: \"mandatory\",\n      },\n      sessionId: this.sessionId,\n    };\n\n    const result = await this.openloginHandler(`${this.baseUrl}/start`, dataObject, getTimeout(dataObject.params.loginProvider));\n    if (this.options.uxMode === UX_MODE.REDIRECT) return null;\n    if (result.error) {\n      this.dappState = result.state;\n      throw LoginError.loginFailed(result.error);\n    }\n    this.sessionManager.sessionId = result.sessionId;\n    this.options.sessionNamespace = result.sessionNamespace;\n    this.currentStorage.set(\"sessionId\", result.sessionId);\n    await this.rehydrateSession();\n    return Boolean(this.state.userInfo?.isMfaEnabled);\n  }\n\n  async manageMFA(params: Partial<ManageMFAParams>): Promise<void> {\n    if (!this.sessionId) throw LoginError.userNotLoggedIn();\n    if (!this.state.userInfo.isMfaEnabled) throw LoginError.mfaNotEnabled();\n\n    // in case of redirect mode, redirect url will be dapp specified\n    // in case of popup mode, redirect url will be sdk specified\n    const defaultParams = {\n      redirectUrl: this.options.dashboardUrl,\n      dappUrl: `${window.location.origin}${window.location.pathname}`,\n    };\n\n    const dataObject: OpenloginSessionConfig = {\n      actionType: OPENLOGIN_ACTIONS.MANAGE_MFA,\n      options: this.options,\n      params: {\n        ...defaultParams,\n        ...params,\n        loginProvider: this.state.userInfo.typeOfLogin,\n        extraLoginOptions: {\n          login_hint: this.state.userInfo.verifierId,\n        },\n      },\n    };\n\n    const loginId = await this.getLoginId(dataObject);\n    const configParams: BaseLoginParams = {\n      loginId,\n      sessionNamespace: this.options.network,\n      storageServerUrl: this.options.storageServerUrl,\n    };\n    const loginUrl = constructURL({\n      baseURL: `${this.baseUrl}/start`,\n      hash: { b64Params: jsonToBase64(configParams) },\n    });\n\n    window.open(loginUrl, \"_blank\");\n  }\n\n  async changeSocialFactor(params: SocialMfaModParams & Partial<BaseRedirectParams>): Promise<boolean> {\n    if (!this.sessionId) throw LoginError.userNotLoggedIn();\n\n    // in case of redirect mode, redirect url will be dapp specified\n    // in case of popup mode, redirect url will be sdk specified\n    const defaultParams: BaseRedirectParams = {\n      redirectUrl: this.options.redirectUrl,\n    };\n\n    const dataObject: OpenloginSessionConfig = {\n      actionType: OPENLOGIN_ACTIONS.MODIFY_SOCIAL_FACTOR,\n      options: this.options,\n      params: {\n        ...defaultParams,\n        ...params,\n      },\n      sessionId: this.sessionId,\n    };\n\n    const result = await this.openloginHandler(`${this.baseUrl}/start`, dataObject);\n    if (this.options.uxMode === UX_MODE.REDIRECT) return undefined;\n    this.sessionManager.sessionId = result.sessionId;\n    this.options.sessionNamespace = result.sessionNamespace;\n    this.currentStorage.set(\"sessionId\", result.sessionId);\n    await this.rehydrateSession();\n    return true;\n  }\n\n  getUserInfo(): OpenloginUserInfo {\n    if (!this.sessionManager.sessionId) {\n      throw LoginError.userNotLoggedIn();\n    }\n    return this.state.userInfo;\n  }\n\n  async getLoginId(data: OpenloginSessionConfig): Promise<string> {\n    if (!this.sessionManager) throw InitializationError.notInitialized();\n\n    const loginId = OpenloginSessionManager.generateRandomSessionKey();\n    const loginSessionMgr = new OpenloginSessionManager<OpenloginSessionConfig>({\n      sessionServerBaseUrl: this.options.storageServerUrl,\n      sessionNamespace: this.options.sessionNamespace,\n      sessionTime: 600, // each login key must be used with 10 mins (might be used at the end of popup redirect)\n      sessionId: loginId,\n    });\n\n    await loginSessionMgr.createSession(JSON.parse(JSON.stringify(data)));\n\n    return loginId;\n  }\n\n  private async _authorizeSession(): Promise<OpenloginSessionData> {\n    try {\n      if (!this.sessionManager.sessionId) return {};\n      const result = await this.sessionManager.authorizeSession();\n      return result;\n    } catch (err) {\n      log.error(\"authorization failed\", err);\n      return {};\n    }\n  }\n\n  private updateState(data: Partial<OpenloginSessionData>) {\n    this.state = { ...this.state, ...data };\n  }\n\n  private async rehydrateSession(): Promise<void> {\n    const result = await this._authorizeSession();\n    this.updateState(result);\n  }\n\n  private async openloginHandler(url: string, dataObject: OpenloginSessionConfig, popupTimeout = 1000 * 10): Promise<PopupResponse | undefined> {\n    const loginId = await this.getLoginId(dataObject);\n    const configParams: BaseLoginParams = {\n      loginId,\n      sessionNamespace: this.options.sessionNamespace,\n      storageServerUrl: this.options.storageServerUrl,\n    };\n\n    if (this.options.uxMode === UX_MODE.REDIRECT) {\n      const loginUrl = constructURL({\n        baseURL: url,\n        hash: { b64Params: jsonToBase64(configParams) },\n      });\n      window.location.href = loginUrl;\n      return undefined;\n    }\n\n    const loginUrl = constructURL({\n      baseURL: url,\n      hash: { b64Params: jsonToBase64(configParams) },\n    });\n    const currentWindow = new PopupHandler({ url: loginUrl, timeout: popupTimeout });\n\n    return new Promise((resolve, reject) => {\n      currentWindow.on(\"close\", () => {\n        reject(LoginError.popupClosed());\n      });\n\n      currentWindow.listenOnChannel(loginId).then(resolve).catch(reject);\n\n      try {\n        currentWindow.open();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\nexport default OpenLogin;\n","export * from \"./errors\";\nexport * from \"./logger\";\nexport { default } from \"./OpenLogin\";\nexport * from \"./utils\";\n"],"names":["CustomError","OpenloginError","constructor","code","message","_defineProperty","Object","defineProperty","value","toJSON","name","toString","JSON","stringify","InitializationError","fromCode","extraMessage","arguments","length","undefined","messages","invalidParams","notInitialized","LoginError","invalidLoginParams","userNotLoggedIn","popupClosed","loginFailed","popupBlocked","mfaAlreadyEnabled","mfaNotEnabled","getLogger","loglevel","setLevel","getPublic","sign","keccak256","base64url","LOGIN_PROVIDER","safeatob","safebtoa","bowser","log","version","process","env","OPENLOGIN_VERSION","whitelistUrl","clientId","appKey","origin","appKeyBuf","Buffer","from","padStart","encode","Error","sig","getHashQueryParams","replaceUrl","result","url","URL","window","location","href","searchParams","forEach","key","queryResult","get","queryParams","parse","keys","error","hash","substring","hashUrl","hashResult","hashParams","cleanUrl","pathname","search","sessionId","sessionNamespace","history","replaceState","_objectSpread","state","as","constructURL","params","baseURL","query","append","h","getPopupFeatures","dualScreenLeft","screenLeft","screenX","dualScreenTop","screenTop","screenY","w","width","innerWidth","document","documentElement","clientWidth","screen","height","innerHeight","clientHeight","systemZoom","left","Math","abs","top","features","isMobileOrTablet","browser","getParser","navigator","userAgent","platform","getPlatform","type","PLATFORMS_MAP","tablet","mobile","getTimeout","loginProvider","FACEBOOK","LINE","SecurePubSub","EventEmitter","PopupHandler","_ref","target","timeout","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","setTimeout","emit","open","_this$window","focus","close","redirect","locationReplaceOnRedirect","replace","listenOnChannel","loginId","securePubSub","data","subscribe","cleanup","parsedData","OpenloginSessionManager","BrowserStorage","BUILD_ENV","jsonToBase64","OPENLOGIN_ACTIONS","OPENLOGIN_NETWORK","TORUS_LEGACY_NETWORK","UX_MODE","OpenLogin","options","network","SAPPHIRE_MAINNET","buildEnv","PRODUCTION","DEVELOPMENT","TESTING","sdkUrl","addVersionInUrls","useMpc","dashboardUrl","STAGING","values","includes","redirectUrl","protocol","host","uxMode","REDIRECT","replaceUrlOnRedirect","originData","whiteLabel","loginConfig","mfaSettings","storageServerUrl","storageKey","webauthnTransports","sessionTime","privKey","factorKey","coreKitKey","ed25519PrivKey","coreKitEd25519Key","coreKitEd25519PrivKey","appState","userInfo","dappState","baseUrl","split","init","_storageBaseKey","currentStorage","getInstance","sessionManager","sessionServerBaseUrl","TESTNET","SAPPHIRE_DEVNET","console","set","_authorizeSession","updateState","login","defaultParams","loginParams","dataObject","actionType","LOGIN","openloginHandler","rehydrateSession","logout","invalidateSession","walletKey","oAuthPrivateKey","tKey","metadataNonce","keyMode","profileImage","dappShare","idToken","oAuthIdToken","oAuthAccessToken","email","verifier","verifierId","aggregateVerifier","typeOfLogin","isMfaEnabled","authToken","signatures","tssShareIndex","tssPubKey","tssShare","tssNonce","enableMFA","_this$state$userInfo","ENABLE_MFA","extraLoginOptions","login_hint","mfaLevel","Boolean","manageMFA","dappUrl","MANAGE_MFA","getLoginId","configParams","loginUrl","b64Params","changeSocialFactor","MODIFY_SOCIAL_FACTOR","getUserInfo","generateRandomSessionKey","loginSessionMgr","createSession","authorizeSession","err","popupTimeout","currentWindow","Promise","resolve","reject","on","then","catch","default"],"sourceRoot":""}